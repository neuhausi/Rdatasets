{
   "data" : {
      "x" : {
         "CarType" : [
            "Mazda6",
            "Mazda6",
            "Mazda6",
            "Mazda6",
            "Mazda6",
            "Mazda6",
            "Mazda6",
            "Mazda6",
            "Mazda6",
            "Mazda6",
            "Mazda6",
            "Mazda6",
            "Mazda6",
            "Mazda6",
            "Mazda6",
            "Mazda6",
            "Mazda6",
            "Mazda6",
            "Mazda6",
            "Mazda6",
            "Mazda6",
            "Mazda6",
            "Mazda6",
            "Mazda6",
            "Mazda6",
            "Mazda6",
            "Mazda6",
            "Mazda6",
            "Mazda6",
            "Mazda6",
            "Accord",
            "Accord",
            "Accord",
            "Accord",
            "Accord",
            "Accord",
            "Accord",
            "Accord",
            "Accord",
            "Accord",
            "Accord",
            "Accord",
            "Accord",
            "Accord",
            "Accord",
            "Accord",
            "Accord",
            "Accord",
            "Accord",
            "Accord",
            "Accord",
            "Accord",
            "Accord",
            "Accord",
            "Accord",
            "Accord",
            "Accord",
            "Accord",
            "Accord",
            "Accord",
            "Maxima",
            "Maxima",
            "Maxima",
            "Maxima",
            "Maxima",
            "Maxima",
            "Maxima",
            "Maxima",
            "Maxima",
            "Maxima",
            "Maxima",
            "Maxima",
            "Maxima",
            "Maxima",
            "Maxima",
            "Maxima",
            "Maxima",
            "Maxima",
            "Maxima",
            "Maxima",
            "Maxima",
            "Maxima",
            "Maxima",
            "Maxima",
            "Maxima",
            "Maxima",
            "Maxima",
            "Maxima",
            "Maxima",
            "Maxima"
         ]
      },
      "y" : {
         "vars" : [
            "Age",
            "Price",
            "Mileage",
            "Mazda6",
            "Accord",
            "Maxima"
         ],
         "data" : [
            [
               3,
               2,
               1,
               2,
               2,
               1,
               2,
               3,
               3,
               4,
               4,
               3,
               3,
               3,
               3,
               1,
               7,
               8,
               6,
               7,
               10,
               13,
               14,
               8,
               13,
               10,
               13,
               14,
               10,
               13,
               7,
               4,
               4,
               7,
               9,
               1,
               18,
               2,
               2,
               5,
               2,
               2,
               6,
               3,
               3,
               2,
               4,
               14,
               9,
               10,
               5,
               3,
               12,
               3,
               4,
               2,
               3,
               3,
               11,
               13,
               0,
               3,
               4,
               4,
               3,
               4,
               4,
               1,
               3,
               1,
               1,
               4,
               3,
               7,
               4,
               8,
               3,
               5,
               3,
               3,
               5,
               7,
               4,
               4,
               6,
               10,
               5,
               7,
               10,
               10
            ],
            [
               15.9,
               16.4,
               18.9,
               16.9,
               20.5,
               19,
               17.5,
               18,
               13.6,
               12,
               10,
               17.9,
               17.8,
               16,
               14.6,
               14,
               8,
               8.5,
               9,
               7.8,
               6.8,
               5,
               4.5,
               5.6,
               2,
               5.8,
               5.2,
               3,
               9.9,
               5,
               12,
               17.9,
               15.7,
               12.5,
               9.5,
               21.5,
               3.5,
               22.8,
               26.8,
               13.6,
               19.4,
               19.5,
               9,
               17.4,
               17.8,
               17.5,
               13.5,
               7,
               11.6,
               7.9,
               11.7,
               15.6,
               5,
               21,
               15.6,
               17,
               16,
               17.6,
               6.9,
               5.5,
               27,
               16.5,
               15.3,
               15.7,
               19.9,
               15.5,
               21,
               21,
               19.9,
               20,
               20,
               15,
               17.3,
               17,
               17.5,
               12.5,
               15.2,
               13.8,
               16.9,
               18,
               13,
               13.8,
               12.5,
               13,
               11.5,
               9.5,
               13,
               11.8,
               6,
               4.8
            ],
            [
               17.8,
               19,
               20.9,
               24,
               24,
               24.2,
               30.1,
               32,
               34.8,
               35.7,
               49.5,
               50.9,
               51.1,
               51.7,
               53.6,
               55.5,
               66.2,
               70.2,
               70.5,
               71.5,
               76.7,
               90.7,
               105.8,
               108.1,
               109.1,
               124.8,
               128.5,
               131,
               133.8,
               137.2,
               74.9,
               53,
               79.1,
               50.1,
               62,
               4.8,
               89.4,
               20.8,
               4.8,
               48.3,
               46.5,
               3,
               64.1,
               8.3,
               27.1,
               20.3,
               68.4,
               86.9,
               64.5,
               150.5,
               65.2,
               56.1,
               139.4,
               13.9,
               18.6,
               15.7,
               38.5,
               19.8,
               119.3,
               122.5,
               15.2,
               24.1,
               30,
               34.4,
               35.1,
               35.3,
               36.9,
               37.5,
               37.7,
               38.6,
               42.1,
               42.3,
               43.3,
               44.9,
               46.6,
               50.3,
               54.6,
               58.5,
               59.4,
               57.4,
               61.1,
               65.8,
               68.8,
               69.1,
               87.7,
               93.3,
               93.7,
               98.3,
               135.7,
               122.9
            ],
            [
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0
            ],
            [
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0
            ],
            [
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1
            ]
         ],
         "smps" : [
            "Smp1",
            "Smp2",
            "Smp3",
            "Smp4",
            "Smp5",
            "Smp6",
            "Smp7",
            "Smp8",
            "Smp9",
            "Smp10",
            "Smp11",
            "Smp12",
            "Smp13",
            "Smp14",
            "Smp15",
            "Smp16",
            "Smp17",
            "Smp18",
            "Smp19",
            "Smp20",
            "Smp21",
            "Smp22",
            "Smp23",
            "Smp24",
            "Smp25",
            "Smp26",
            "Smp27",
            "Smp28",
            "Smp29",
            "Smp30",
            "Smp31",
            "Smp32",
            "Smp33",
            "Smp34",
            "Smp35",
            "Smp36",
            "Smp37",
            "Smp38",
            "Smp39",
            "Smp40",
            "Smp41",
            "Smp42",
            "Smp43",
            "Smp44",
            "Smp45",
            "Smp46",
            "Smp47",
            "Smp48",
            "Smp49",
            "Smp50",
            "Smp51",
            "Smp52",
            "Smp53",
            "Smp54",
            "Smp55",
            "Smp56",
            "Smp57",
            "Smp58",
            "Smp59",
            "Smp60",
            "Smp61",
            "Smp62",
            "Smp63",
            "Smp64",
            "Smp65",
            "Smp66",
            "Smp67",
            "Smp68",
            "Smp69",
            "Smp70",
            "Smp71",
            "Smp72",
            "Smp73",
            "Smp74",
            "Smp75",
            "Smp76",
            "Smp77",
            "Smp78",
            "Smp79",
            "Smp80",
            "Smp81",
            "Smp82",
            "Smp83",
            "Smp84",
            "Smp85",
            "Smp86",
            "Smp87",
            "Smp88",
            "Smp89",
            "Smp90"
         ]
      }
   },
   "info" : "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n<script type=\"text/javascript\">\nconst macros = { \"\\\\R\": \"\\\\textsf{R}\", \"\\\\code\": \"\\\\texttt\"};\nfunction processMathHTML() {\n    var l = document.getElementsByClassName('reqn');\n    for (let e of l) { katex.render(e.textContent, e, { throwOnError: false, macros }); }\n    return;\n}</script>\n<script defer src=\"https://cdn.jsdelivr.net/npm/katex@0.15.3/dist/katex.min.js\"\n    onload=\"processMathHTML();\"></script>\n<table style=\"width: 100%;\"><tr><td>ThreeCars2017</td><td style=\"text-align: right;\">R Documentation</td></tr></table>\n<h2>Price, Age, and Mileage of Three Used Car Models</h2>\n<h3>Description</h3>\n<p>Data from cars.com for a sample of three different models of used cars in 2017\n</p>\n<h3>Format</h3>\n<p>A data frame with 90 observations on the following 7 variables.\n</p>\n<dl>\n<dt><code>CarType</code></dt><dd><p>Model (<code>Accord</code>, <code>Maxima</code>, or <code>Mazda6</code>)</p>\n</dd>\n<dt><code>Age</code></dt><dd><p>Age of used car (years)</p>\n</dd>\n<dt><code>Price</code></dt><dd><p>Price (in thousands of dollars)</p>\n</dd>\n<dt><code>Mileage</code></dt><dd><p>Mileage (in thousands of miles)</p>\n</dd>\n<dt><code>Mazda6</code></dt><dd><p>Is the car a Mazda6? (<code>1</code>=yes or <code>0</code>=no)</p>\n</dd>\n<dt><code>Accord</code></dt><dd><p>Is the car an Accord? (<code>1</code>=yes or <code>0</code>=no)</p>\n</dd>\n<dt><code>Maxima</code></dt><dd><p>Is the car a Maxima? (<code>1</code>=yes or <code>0</code>=no)</p>\n</dd>\n</dl>\n<h3>Details</h3>\n<p>Data for a sample of cars from three models (Mazda6, Honda Accord, Toyota Maxima) from a website. The dataset AccordPrice is a subset of this file.\n</p>\n<h3>Source</h3>\n<p>Data obtained from cars.com, February 2017 using zip code 44107, Lakewood, Ohio.\n</p>\n</main>\n</div>\n",
   "config" : {
      "title" : "Price",
      "subtitle" : "Stat2Data - ThreeCars2017",
      "smpOverlays" : [
         "CarType"
      ],
      "graphType" : "Heatmap"
   }
}
