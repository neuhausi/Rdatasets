{
   "config" : {
      "title" : "Anesthetic Effectiveness",
      "graphType" : "Scatter2D",
      "scatterPlotMatrix" : 1,
      "subtitle" : "DAAG - anesthetic"
   },
   "info" : "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n<script type=\"text/javascript\">\nconst macros = { \"\\\\R\": \"\\\\textsf{R}\", \"\\\\code\": \"\\\\texttt\"};\nfunction processMathHTML() {\n    var l = document.getElementsByClassName('reqn');\n    for (let e of l) { katex.render(e.textContent, e, { throwOnError: false, macros }); }\n    return;\n}</script>\n<script defer src=\"https://cdn.jsdelivr.net/npm/katex@0.15.3/dist/katex.min.js\"\n    onload=\"processMathHTML();\"></script>\n<table style=\"width: 100%;\"><tr><td>anesthetic</td><td style=\"text-align: right;\">R Documentation</td></tr></table>\n<h2>Anesthetic Effectiveness</h2>\n<h3>Description</h3>\n<p>Thirty patients were given an anesthetic agent maintained\nat a predetermined level (conc) for 15 minutes before making\nan incision.  It was then noted whether the patient\nmoved, i.e. jerked or twisted.  \n</p>\n<h3>Usage</h3>\n<pre><code class='language-R'>anesthetic</code></pre>\n<h3>Format</h3>\n<p>This data frame contains the following columns:\n</p>\n<dl>\n<dt>move</dt><dd><p>a binary numeric vector coded for \npatient movement (0 = no movement, 1 = movement)</p>\n</dd>\n<dt>conc</dt><dd><p>anesthetic concentration</p>\n</dd>\n<dt>logconc</dt><dd><p>logarithm of concentration</p>\n</dd>\n<dt>nomove</dt><dd><p>the complement of move</p>\n</dd>\n</dl>\n<h3>Details</h3>\n<p>The interest is in estimating\nhow the probability of jerking or twisting varies with\nincreasing concentration of the anesthetic agent.\n</p>\n<h3>Source</h3>\n<p>unknown\n</p>\n<h3>Examples</h3>\n<pre><code class='language-R'>print(\"Logistic Regression - Example 8.1.4\")\nz &lt;- table(anesthetic$nomove, anesthetic$conc)\ntot &lt;- apply(z, 2, sum)         # totals at each concentration\nprop &lt;- z[2,  ]/(tot)           # proportions at each concentration\noprop &lt;- sum(z[2,  ])/sum(tot)  # expected proportion moving if concentration had no effect\nconc &lt;- as.numeric(dimnames(z)[[2]])\nplot(conc, prop, xlab = \"Concentration\", ylab = \"Proportion\", xlim = c(.5,2.5),\n    ylim = c(0, 1), pch = 16)\nchw &lt;- par()$cxy[1]\ntext(conc - 0.75 * chw, prop, paste(tot), adj = 1)\nabline(h = oprop, lty = 2)\npause()\nanes.logit &lt;- glm(nomove ~ conc, family = binomial(link = logit),\n  data = anesthetic)\nanova(anes.logit)\nsummary(anes.logit)\n</code></pre>\n</main>\n</div>\n",
   "data" : {
      "y" : {
         "vars" : [
            "Var1",
            "Var2",
            "Var3",
            "Var4",
            "Var5",
            "Var6",
            "Var7",
            "Var8",
            "Var9",
            "Var10",
            "Var11",
            "Var12",
            "Var13",
            "Var14",
            "Var15",
            "Var16",
            "Var17",
            "Var18",
            "Var19",
            "Var20",
            "Var21",
            "Var22",
            "Var23",
            "Var24",
            "Var25",
            "Var26",
            "Var27",
            "Var28",
            "Var29",
            "Var30"
         ],
         "smps" : [
            "move",
            "conc",
            "logconc",
            "nomove"
         ],
         "data" : [
            [
               0,
               1,
               0,
               1
            ],
            [
               1,
               1.2,
               0.182321556793955,
               0
            ],
            [
               0,
               1.4,
               0.336472236621213,
               1
            ],
            [
               1,
               1.4,
               0.336472236621213,
               0
            ],
            [
               1,
               1.2,
               0.182321556793955,
               0
            ],
            [
               0,
               2.5,
               0.916290731874155,
               1
            ],
            [
               0,
               1.6,
               0.470003629245736,
               1
            ],
            [
               1,
               0.8,
               -0.22314355131421,
               0
            ],
            [
               0,
               1.6,
               0.470003629245736,
               1
            ],
            [
               1,
               1.4,
               0.336472236621213,
               0
            ],
            [
               1,
               0.8,
               -0.22314355131421,
               0
            ],
            [
               0,
               1.6,
               0.470003629245736,
               1
            ],
            [
               0,
               2.5,
               0.916290731874155,
               1
            ],
            [
               0,
               1.4,
               0.336472236621213,
               1
            ],
            [
               0,
               1.6,
               0.470003629245736,
               1
            ],
            [
               0,
               1.4,
               0.336472236621213,
               1
            ],
            [
               0,
               1.4,
               0.336472236621213,
               1
            ],
            [
               1,
               0.8,
               -0.22314355131421,
               0
            ],
            [
               0,
               0.8,
               -0.22314355131421,
               1
            ],
            [
               0,
               1.2,
               0.182321556793955,
               1
            ],
            [
               1,
               0.8,
               -0.22314355131421,
               0
            ],
            [
               1,
               0.8,
               -0.22314355131421,
               0
            ],
            [
               1,
               1,
               0,
               0
            ],
            [
               1,
               0.8,
               -0.22314355131421,
               0
            ],
            [
               1,
               1,
               0,
               0
            ],
            [
               0,
               1.2,
               0.182321556793955,
               1
            ],
            [
               1,
               1,
               0,
               0
            ],
            [
               0,
               1.2,
               0.182321556793955,
               1
            ],
            [
               1,
               1,
               0,
               0
            ],
            [
               0,
               1.2,
               0.182321556793955,
               1
            ]
         ]
      }
   }
}
