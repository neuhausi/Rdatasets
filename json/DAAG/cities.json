{
   "config" : {
      "subtitle" : "DAAG - cities",
      "title" : "Populations of Major Canadian Cities (1992-96)",
      "graphType" : "Scatter2D",
      "shapeBy" : "REGION",
      "colorBy" : "CITY",
      "scatterPlotMatrix" : 1
   },
   "info" : "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n<script type=\"text/javascript\">\nconst macros = { \"\\\\R\": \"\\\\textsf{R}\", \"\\\\code\": \"\\\\texttt\"};\nfunction processMathHTML() {\n    var l = document.getElementsByClassName('reqn');\n    for (let e of l) { katex.render(e.textContent, e, { throwOnError: false, macros }); }\n    return;\n}</script>\n<script defer src=\"https://cdn.jsdelivr.net/npm/katex@0.15.3/dist/katex.min.js\"\n    onload=\"processMathHTML();\"></script>\n<table style=\"width: 100%;\"><tr><td>cities</td><td style=\"text-align: right;\">R Documentation</td></tr></table>\n<h2>Populations of Major Canadian Cities (1992-96)</h2>\n<h3>Description</h3>\n<p>Population estimates for several Canadian cities.\n</p>\n<h3>Usage</h3>\n<pre><code class='language-R'>cities</code></pre>\n<h3>Format</h3>\n<p>This data frame contains the following columns:\n</p>\n<dl>\n<dt>CITY</dt><dd><p>a factor, consisting of the city names</p>\n</dd>\n<dt>REGION</dt><dd><p>a factor with 5 levels (ATL=Atlantic, ON=Ontario,\nQC=Quebec, PR=Prairies, WEST=Alberta and British Columbia) representing the location\nof the cities</p>\n</dd>\n<dt>POP1992</dt><dd><p>a numeric vector giving population in 1000's for 1992</p>\n</dd>\n<dt>POP1993</dt><dd><p>a numeric vector giving population in 1000's for 1993</p>\n</dd>\n<dt>POP1994</dt><dd><p>a numeric vector giving population in 1000's for 1994</p>\n</dd>\n<dt>POP1995</dt><dd><p>a numeric vector giving population in 1000's for 1995</p>\n</dd>\n<dt>POP1996</dt><dd><p>a numeric vector giving population in 1000's for 1996</p>\n</dd>\n</dl>\n<h3>Source</h3>\n<p>Statistics Canada\n</p>\n<h3>Examples</h3>\n<pre><code class='language-R'>cities$have &lt;- factor((cities$REGION==\"ON\")|(cities$REGION==\"WEST\"))\nplot(POP1996~POP1992, data=cities, col=as.integer(cities$have))\n</code></pre>\n</main>\n</div>\n",
   "data" : {
      "z" : {
         "CITY" : [
            "Toronto",
            "Montreal",
            "Vancouver",
            "Ottawa",
            "Edmonton",
            "Calgary",
            "Quebec",
            "Winnipeg",
            "Hamilton",
            "London",
            "Kitchener",
            "StCatharines",
            "Halifax",
            "Victoria",
            "Windsor",
            "Oshawa",
            "Saskatoon",
            "Regina",
            "StJohns",
            "Chicoutimi",
            "Sudbury",
            "Sherbrooke",
            "TroisRivieres",
            "ThunderBay",
            "SaintJohn"
         ],
         "REGION" : [
            "ON",
            "QC",
            "WEST",
            "ON",
            "WEST",
            "WEST",
            "QC",
            "PR",
            "ON",
            "ON",
            "ON",
            "ON",
            "ATL",
            "WEST",
            "ON",
            "ON",
            "PR",
            "PR",
            "ATL",
            "QC",
            "ON",
            "QC",
            "QC",
            "ON",
            "ATL"
         ]
      },
      "y" : {
         "vars" : [
            "Var1",
            "Var2",
            "Var3",
            "Var4",
            "Var5",
            "Var6",
            "Var7",
            "Var8",
            "Var9",
            "Var10",
            "Var11",
            "Var12",
            "Var13",
            "Var14",
            "Var15",
            "Var16",
            "Var17",
            "Var18",
            "Var19",
            "Var20",
            "Var21",
            "Var22",
            "Var23",
            "Var24",
            "Var25"
         ],
         "smps" : [
            "POP1992",
            "POP1993",
            "POP1994",
            "POP1995",
            "POP1996"
         ],
         "data" : [
            [
               4116.9,
               4198.2,
               4256,
               4346.3,
               4444.7
            ],
            [
               3251.1,
               3288.9,
               3308.4,
               3335.6,
               3359
            ],
            [
               1690.8,
               1734.3,
               1779.8,
               1832.9,
               1891.4
            ],
            [
               974.6,
               997.7,
               1010.7,
               1023.2,
               1030.5
            ],
            [
               870.7,
               880.3,
               881.7,
               884.7,
               891.5
            ],
            [
               785.4,
               798.2,
               812.8,
               831.8,
               851.6
            ],
            [
               672.3,
               682.6,
               689.4,
               693.4,
               697.6
            ],
            [
               667.9,
               671.7,
               673.4,
               677.3,
               676.7
            ],
            [
               626.8,
               631.1,
               635.8,
               643.1,
               650.4
            ],
            [
               400.5,
               404.3,
               408.3,
               413.2,
               416.1
            ],
            [
               376.3,
               382.3,
               388.5,
               395.4,
               403.3
            ],
            [
               381.8,
               383.7,
               384.4,
               386.5,
               389.7
            ],
            [
               331.4,
               335,
               338.8,
               342.5,
               346.8
            ],
            [
               300.9,
               304.8,
               308.3,
               311.4,
               313.4
            ],
            [
               274.4,
               277.7,
               281.5,
               285.9,
               291.7
            ],
            [
               256.7,
               263.4,
               269.6,
               275.6,
               280.9
            ],
            [
               215.6,
               216.9,
               217.9,
               220.5,
               222.1
            ],
            [
               196.1,
               197.3,
               197.8,
               198.6,
               199.2
            ],
            [
               177.4,
               178.6,
               178.5,
               178.5,
               177.8
            ],
            [
               165.7,
               166.9,
               167.2,
               167,
               166.6
            ],
            [
               166,
               166.9,
               166.6,
               166.4,
               166.2
            ],
            [
               144.1,
               145.4,
               146.8,
               148.2,
               150
            ],
            [
               141.4,
               141.9,
               142.5,
               143.2,
               143.6
            ],
            [
               130.2,
               130.6,
               130.7,
               131,
               131.3
            ],
            [
               129.4,
               129.6,
               129.4,
               129.3,
               129.1
            ]
         ]
      }
   }
}
