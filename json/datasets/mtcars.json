{
   "data" : {
      "y" : {
         "data" : [
            [
               21,
               21,
               22.8,
               21.4,
               18.7,
               18.1,
               14.3,
               24.4,
               22.8,
               19.2,
               17.8,
               16.4,
               17.3,
               15.2,
               10.4,
               10.4,
               14.7,
               32.4,
               30.4,
               33.9,
               21.5,
               15.5,
               15.2,
               13.3,
               19.2,
               27.3,
               26,
               30.4,
               15.8,
               19.7,
               15,
               21.4
            ],
            [
               6,
               6,
               4,
               6,
               8,
               6,
               8,
               4,
               4,
               6,
               6,
               8,
               8,
               8,
               8,
               8,
               8,
               4,
               4,
               4,
               4,
               8,
               8,
               8,
               8,
               4,
               4,
               4,
               8,
               6,
               8,
               4
            ],
            [
               160,
               160,
               108,
               258,
               360,
               225,
               360,
               146.7,
               140.8,
               167.6,
               167.6,
               275.8,
               275.8,
               275.8,
               472,
               460,
               440,
               78.7,
               75.7,
               71.1,
               120.1,
               318,
               304,
               350,
               400,
               79,
               120.3,
               95.1,
               351,
               145,
               301,
               121
            ],
            [
               110,
               110,
               93,
               110,
               175,
               105,
               245,
               62,
               95,
               123,
               123,
               180,
               180,
               180,
               205,
               215,
               230,
               66,
               52,
               65,
               97,
               150,
               150,
               245,
               175,
               66,
               91,
               113,
               264,
               175,
               335,
               109
            ],
            [
               3.9,
               3.9,
               3.85,
               3.08,
               3.15,
               2.76,
               3.21,
               3.69,
               3.92,
               3.92,
               3.92,
               3.07,
               3.07,
               3.07,
               2.93,
               3,
               3.23,
               4.08,
               4.93,
               4.22,
               3.7,
               2.76,
               3.15,
               3.73,
               3.08,
               4.08,
               4.43,
               3.77,
               4.22,
               3.62,
               3.54,
               4.11
            ],
            [
               2.62,
               2.875,
               2.32,
               3.215,
               3.44,
               3.46,
               3.57,
               3.19,
               3.15,
               3.44,
               3.44,
               4.07,
               3.73,
               3.78,
               5.25,
               5.424,
               5.345,
               2.2,
               1.615,
               1.835,
               2.465,
               3.52,
               3.435,
               3.84,
               3.845,
               1.935,
               2.14,
               1.513,
               3.17,
               2.77,
               3.57,
               2.78
            ],
            [
               16.46,
               17.02,
               18.61,
               19.44,
               17.02,
               20.22,
               15.84,
               20,
               22.9,
               18.3,
               18.9,
               17.4,
               17.6,
               18,
               17.98,
               17.82,
               17.42,
               19.47,
               18.52,
               19.9,
               20.01,
               16.87,
               17.3,
               15.41,
               17.05,
               18.9,
               16.7,
               16.9,
               14.5,
               15.5,
               14.6,
               18.6
            ],
            [
               0,
               0,
               1,
               1,
               0,
               1,
               0,
               1,
               1,
               1,
               1,
               0,
               0,
               0,
               0,
               0,
               0,
               1,
               1,
               1,
               1,
               0,
               0,
               0,
               0,
               1,
               0,
               1,
               0,
               0,
               0,
               1
            ],
            [
               1,
               1,
               1,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               0,
               1,
               1,
               1,
               0,
               0,
               0,
               0,
               0,
               1,
               1,
               1,
               1,
               1,
               1,
               1
            ],
            [
               4,
               4,
               4,
               3,
               3,
               3,
               3,
               4,
               4,
               4,
               4,
               3,
               3,
               3,
               3,
               3,
               3,
               4,
               4,
               4,
               3,
               3,
               3,
               3,
               3,
               4,
               5,
               5,
               5,
               5,
               5,
               4
            ],
            [
               4,
               4,
               1,
               1,
               2,
               1,
               4,
               2,
               2,
               4,
               4,
               3,
               3,
               3,
               4,
               4,
               4,
               1,
               2,
               1,
               1,
               2,
               2,
               4,
               2,
               1,
               2,
               2,
               4,
               6,
               8,
               2
            ]
         ],
         "smps" : [
            "Mazda RX4",
            "Mazda RX4 Wag",
            "Datsun 710",
            "Hornet 4 Drive",
            "Hornet Sportabout",
            "Valiant",
            "Duster 360",
            "Merc 240D",
            "Merc 230",
            "Merc 280",
            "Merc 280C",
            "Merc 450SE",
            "Merc 450SL",
            "Merc 450SLC",
            "Cadillac Fleetwood",
            "Lincoln Continental",
            "Chrysler Imperial",
            "Fiat 128",
            "Honda Civic",
            "Toyota Corolla",
            "Toyota Corona",
            "Dodge Challenger",
            "AMC Javelin",
            "Camaro Z28",
            "Pontiac Firebird",
            "Fiat X1-9",
            "Porsche 914-2",
            "Lotus Europa",
            "Ford Pantera L",
            "Ferrari Dino",
            "Maserati Bora",
            "Volvo 142E"
         ],
         "vars" : [
            "mpg",
            "cyl",
            "disp",
            "hp",
            "drat",
            "wt",
            "qsec",
            "vs",
            "am",
            "gear",
            "carb"
         ]
      }
   },
   "info" : "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n<script type=\"text/javascript\">\nconst macros = { \"\\\\R\": \"\\\\textsf{R}\", \"\\\\code\": \"\\\\texttt\"};\nfunction processMathHTML() {\n    var l = document.getElementsByClassName('reqn');\n    for (let e of l) { katex.render(e.textContent, e, { throwOnError: false, macros }); }\n    return;\n}</script>\n<script defer src=\"https://cdn.jsdelivr.net/npm/katex@0.15.3/dist/katex.min.js\"\n    onload=\"processMathHTML();\"></script>\n<table style=\"width: 100%;\"><tr><td>mtcars</td><td style=\"text-align: right;\">R Documentation</td></tr></table>\n<h2>Motor Trend Car Road Tests</h2>\n<h3>Description</h3>\n<p>The data was extracted from the 1974 <em>Motor Trend</em> US magazine,\nand comprises fuel consumption and 10 aspects of\nautomobile design and performance for 32 automobiles (1973&ndash;74\nmodels).\n</p>\n<h3>Usage</h3>\n<pre><code class='language-R'>mtcars</code></pre>\n<h3>Format</h3>\n<p>A data frame with 32 observations on 11 (numeric) variables.\n</p>\n<table>\n<tr>\n <td style=\"text-align: right;\">\n    [, 1] </td><td style=\"text-align: left;\"> <code>mpg</code>  </td><td style=\"text-align: left;\"> Miles/(US) gallon </td>\n</tr>\n<tr>\n <td style=\"text-align: right;\">\n    [, 2] </td><td style=\"text-align: left;\"> <code>cyl</code>  </td><td style=\"text-align: left;\"> Number of cylinders </td>\n</tr>\n<tr>\n <td style=\"text-align: right;\">\n    [, 3] </td><td style=\"text-align: left;\"> <code>disp</code> </td><td style=\"text-align: left;\"> Displacement (cu.in.) </td>\n</tr>\n<tr>\n <td style=\"text-align: right;\">\n    [, 4] </td><td style=\"text-align: left;\"> <code>hp</code>   </td><td style=\"text-align: left;\"> Gross horsepower </td>\n</tr>\n<tr>\n <td style=\"text-align: right;\">\n    [, 5] </td><td style=\"text-align: left;\"> <code>drat</code> </td><td style=\"text-align: left;\"> Rear axle ratio </td>\n</tr>\n<tr>\n <td style=\"text-align: right;\">\n    [, 6] </td><td style=\"text-align: left;\"> <code>wt</code>   </td><td style=\"text-align: left;\"> Weight (1000 lbs) </td>\n</tr>\n<tr>\n <td style=\"text-align: right;\">\n    [, 7] </td><td style=\"text-align: left;\"> <code>qsec</code> </td><td style=\"text-align: left;\"> 1/4 mile time </td>\n</tr>\n<tr>\n <td style=\"text-align: right;\">\n    [, 8] </td><td style=\"text-align: left;\"> <code>vs</code>   </td><td style=\"text-align: left;\"> Engine (0 = V-shaped, 1 = straight) </td>\n</tr>\n<tr>\n <td style=\"text-align: right;\">\n    [, 9] </td><td style=\"text-align: left;\"> <code>am</code>   </td><td style=\"text-align: left;\"> Transmission (0 = automatic, 1 = manual) </td>\n</tr>\n<tr>\n <td style=\"text-align: right;\">\n    [,10] </td><td style=\"text-align: left;\"> <code>gear</code> </td><td style=\"text-align: left;\"> Number of forward gears </td>\n</tr>\n<tr>\n <td style=\"text-align: right;\">\n    [,11] </td><td style=\"text-align: left;\"> <code>carb</code> </td><td style=\"text-align: left;\"> Number of carburetors\n  </td>\n</tr>\n</table>\n<h3>Note</h3>\n<p>Henderson and Velleman (1981) comment in a footnote to Table 1:\n&lsquo;Hocking [original transcriber]'s noncrucial coding of the\nMazda's rotary engine as a straight six-cylinder engine and the\nPorsche's flat engine as a V engine, as well as the inclusion of the\ndiesel Mercedes 240D, have been retained to enable direct comparisons\nto be made with previous analyses.&rsquo;\n</p>\n<h3>Source</h3>\n<p>Henderson and Velleman (1981),\nBuilding multiple regression models interactively.\n<em>Biometrics</em>, <b>37</b>, 391&ndash;411.\n</p>\n<h3>Examples</h3>\n<pre><code class='language-R'>require(graphics)\npairs(mtcars, main = \"mtcars data\", gap = 1/4)\ncoplot(mpg ~ disp | as.factor(cyl), data = mtcars,\n       panel = panel.smooth, rows = 1)\n## possibly more meaningful, e.g., for summary() or bivariate plots:\nmtcars2 &lt;- within(mtcars, {\n   vs &lt;- factor(vs, labels = c(\"V\", \"S\"))\n   am &lt;- factor(am, labels = c(\"automatic\", \"manual\"))\n   cyl  &lt;- ordered(cyl)\n   gear &lt;- ordered(gear)\n   carb &lt;- ordered(carb)\nsummary(mtcars2)\n</code></pre>\n</main>\n</div>\n",
   "config" : {
      "subtitle" : "datasets - mtcars",
      "title" : "Motor Trend Car Road Tests",
      "graphType" : "Heatmap",
      "smpOverlays" : [
         null
      ]
   }
}
