{
   "data" : {
      "y" : {
         "data" : [
            [
               3.741,
               12,
               0.907
            ],
            [
               2.295,
               12,
               0.761
            ],
            [
               1.498,
               12,
               1.108
            ],
            [
               2.881,
               12,
               1.016
            ],
            [
               0.76,
               12,
               1.189
            ],
            [
               3.12,
               9,
               1.001
            ],
            [
               0.638,
               9,
               1.231
            ],
            [
               1.17,
               9,
               1.123
            ],
            [
               2.358,
               12,
               1.042
            ],
            [
               0.606,
               12,
               1.215
            ],
            [
               3.669,
               12,
               0.93
            ],
            [
               1,
               12,
               1.152
            ],
            [
               0.981,
               15,
               1.138
            ],
            [
               1.192,
               18,
               0.601
            ],
            [
               0.926,
               7.5,
               0.696
            ],
            [
               1.59,
               12,
               0.686
            ],
            [
               1.806,
               12,
               1.072
            ],
            [
               1.962,
               15,
               1.074
            ],
            [
               4.028,
               15,
               0.934
            ],
            [
               3.148,
               9,
               0.808
            ],
            [
               1.836,
               9,
               1.071
            ],
            [
               2.845,
               7.5,
               1.009
            ],
            [
               1.013,
               7.5,
               1.142
            ],
            [
               0.414,
               18,
               1.229
            ],
            [
               0.812,
               18,
               1.175
            ],
            [
               0.374,
               15,
               0.568
            ],
            [
               3.623,
               15,
               0.977
            ],
            [
               1.869,
               7.5,
               0.767
            ],
            [
               2.836,
               7.5,
               1.006
            ],
            [
               3.567,
               9,
               0.893
            ],
            [
               0.866,
               15,
               1.152
            ],
            [
               1.369,
               15,
               0.693
            ],
            [
               0.542,
               15,
               1.232
            ],
            [
               2.739,
               15,
               1.036
            ],
            [
               1.2,
               15,
               1.125
            ],
            [
               1.719,
               9,
               1.081
            ],
            [
               3.423,
               9,
               0.868
            ],
            [
               1.634,
               7.5,
               0.762
            ],
            [
               1.021,
               7.5,
               1.144
            ],
            [
               2.157,
               7.5,
               1.045
            ],
            [
               3.361,
               18,
               0.797
            ],
            [
               1.39,
               18,
               1.115
            ],
            [
               1.947,
               18,
               1.07
            ],
            [
               0.962,
               18,
               1.219
            ],
            [
               0.571,
               9,
               0.637
            ],
            [
               2.219,
               9,
               0.733
            ],
            [
               1.419,
               9,
               0.715
            ],
            [
               3.519,
               9,
               0.872
            ],
            [
               1.732,
               7.5,
               0.765
            ],
            [
               3.206,
               7.5,
               0.878
            ],
            [
               2.471,
               7.5,
               0.811
            ],
            [
               1.777,
               15,
               0.676
            ],
            [
               2.571,
               18,
               1.045
            ],
            [
               3.952,
               18,
               0.968
            ],
            [
               3.931,
               15,
               0.846
            ],
            [
               1.587,
               15,
               0.684
            ],
            [
               1.397,
               7.5,
               0.729
            ],
            [
               3.536,
               7.5,
               0.911
            ],
            [
               2.202,
               7.5,
               0.808
            ],
            [
               0.756,
               7.5,
               1.168
            ],
            [
               1.62,
               7.5,
               0.749
            ],
            [
               3.656,
               7.5,
               0.892
            ],
            [
               2.964,
               7.5,
               1.002
            ],
            [
               3.76,
               18,
               0.812
            ],
            [
               0.672,
               18,
               1.23
            ],
            [
               3.677,
               18,
               0.804
            ],
            [
               3.517,
               12,
               0.813
            ],
            [
               3.29,
               12,
               1.002
            ],
            [
               1.139,
               9,
               0.696
            ],
            [
               0.727,
               9,
               1.199
            ],
            [
               2.581,
               9,
               1.03
            ],
            [
               0.923,
               15,
               0.602
            ],
            [
               1.527,
               15,
               0.694
            ],
            [
               3.388,
               15,
               0.816
            ],
            [
               2.085,
               15,
               1.037
            ],
            [
               0.966,
               15,
               1.181
            ],
            [
               3.488,
               7.5,
               0.899
            ],
            [
               0.754,
               7.5,
               1.227
            ],
            [
               0.797,
               9,
               1.18
            ],
            [
               2.064,
               7.5,
               0.795
            ],
            [
               3.732,
               18,
               0.99
            ],
            [
               0.586,
               18,
               1.201
            ],
            [
               0.561,
               7.5,
               0.629
            ],
            [
               0.563,
               9,
               0.608
            ],
            [
               0.678,
               12,
               0.584
            ],
            [
               0.37,
               15,
               0.562
            ],
            [
               0.53,
               18,
               0.535
            ],
            [
               1.9,
               18,
               0.655
            ]
         ],
         "vars" : [
            "Var1",
            "Var2",
            "Var3",
            "Var4",
            "Var5",
            "Var6",
            "Var7",
            "Var8",
            "Var9",
            "Var10",
            "Var11",
            "Var12",
            "Var13",
            "Var14",
            "Var15",
            "Var16",
            "Var17",
            "Var18",
            "Var19",
            "Var20",
            "Var21",
            "Var22",
            "Var23",
            "Var24",
            "Var25",
            "Var26",
            "Var27",
            "Var28",
            "Var29",
            "Var30",
            "Var31",
            "Var32",
            "Var33",
            "Var34",
            "Var35",
            "Var36",
            "Var37",
            "Var38",
            "Var39",
            "Var40",
            "Var41",
            "Var42",
            "Var43",
            "Var44",
            "Var45",
            "Var46",
            "Var47",
            "Var48",
            "Var49",
            "Var50",
            "Var51",
            "Var52",
            "Var53",
            "Var54",
            "Var55",
            "Var56",
            "Var57",
            "Var58",
            "Var59",
            "Var60",
            "Var61",
            "Var62",
            "Var63",
            "Var64",
            "Var65",
            "Var66",
            "Var67",
            "Var68",
            "Var69",
            "Var70",
            "Var71",
            "Var72",
            "Var73",
            "Var74",
            "Var75",
            "Var76",
            "Var77",
            "Var78",
            "Var79",
            "Var80",
            "Var81",
            "Var82",
            "Var83",
            "Var84",
            "Var85",
            "Var86",
            "Var87",
            "Var88"
         ],
         "smps" : [
            "NOx",
            "C",
            "E"
         ]
      }
   },
   "info" : "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n<script type=\"text/javascript\">\nconst macros = { \"\\\\R\": \"\\\\textsf{R}\", \"\\\\code\": \"\\\\texttt\"};\nfunction processMathHTML() {\n    var l = document.getElementsByClassName('reqn');\n    for (let e of l) { katex.render(e.textContent, e, { throwOnError: false, macros }); }\n    return;\n}</script>\n<script defer src=\"https://cdn.jsdelivr.net/npm/katex@0.15.3/dist/katex.min.js\"\n    onload=\"processMathHTML();\"></script>\n<table style=\"width: 100%;\"><tr><td>H_ethanol</td><td style=\"text-align: right;\">R Documentation</td></tr></table>\n<h2> Engine exhaust fumes from burning ethanol </h2>\n<h3>Description</h3>\n<p>Ethanol fuel was burned in a single-cylinder engine.  For various\nsettings of the engine compression and equivalence ratio, the\nemissions of nitrogen oxides were recorded.\n</p>\n<h3>Usage</h3>\n<pre><code class='language-R'>ethanol</code></pre>\n<h3>Format</h3>\n<p>A data frame with 88 observations on the following 3 variables.\n</p>\n<dl>\n<dt>NOx</dt><dd><p>Concentration of nitrogen oxides (NO and NO2) in\nmicrograms/J.</p>\n</dd>\n<dt>C</dt><dd><p>Compression ratio of the engine.</p>\n</dd>\n<dt>E</dt><dd><p>Equivalence ratio&ndash;a measure of the richness of the air and\nethanol fuel mixture.</p>\n</dd>\n</dl>\n<h3>Author(s)</h3>\n<p>Documentation contributed by Kevin Wright.\n</p>\n<h3>Source</h3>\n<p>Brinkman, N.D. (1981) Ethanol Fuel&mdash;A Single-Cylinder Engine Study of\nEfficiency and Exhaust Emissions. <em>SAE transactions</em>,\n<b>90</b>, 1410&ndash;1424.\n</p>\n<h3>References</h3>\n<p>Cleveland, William S. (1993) <em>Visualizing Data</em>.  Hobart Press,\nSummit, New Jersey.\n</p>\n<h3>Examples</h3>\n<pre><code class='language-R'>## Constructing panel functions on the fly\nEE &lt;- equal.count(ethanol$E, number=9, overlap=1/4)\nxyplot(NOx ~ C | EE, data = ethanol,\n       prepanel = function(x, y) prepanel.loess(x, y, span = 1),\n       xlab = \"Compression ratio\", ylab = \"NOx (micrograms/J)\",\n       panel = function(x, y) {\n           panel.grid(h=-1, v= 2)\n           panel.xyplot(x, y, grid = FALSE)\n           panel.loess(x, y, span = 1)\n       aspect = \"xy\")\n# Wireframe loess surface fit.  See Figure 4.61 from Cleveland.\nrequire(stats)\nwith(ethanol, {\n  eth.lo &lt;- loess(NOx ~ C * E, span = 1/3, parametric = \"C\", \n                  drop.square = \"C\", family=\"symmetric\")\n  eth.marginal &lt;- list(C = seq(min(C), max(C), length.out = 25), \n                       E = seq(min(E), max(E), length.out = 25))\n  eth.grid &lt;- expand.grid(eth.marginal)\n  eth.fit &lt;- predict(eth.lo, eth.grid)\n  wireframe(eth.fit ~ eth.grid$C * eth.grid$E,\n            shade=TRUE,\n\t    screen = list(z = 40, x = -60, y=0),\n\t    distance = .1,\n\t    xlab = \"C\", ylab = \"E\", zlab = \"NOx\")\n</code></pre>\n</main>\n</div>\n",
   "config" : {
      "subtitle" : "lattice - ethanol",
      "title" : "Engine exhaust fumes from burning ethanol",
      "graphType" : "Scatter3D"
   }
}
