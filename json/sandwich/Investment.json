{
   "data" : {
      "x" : {
         "RealInt" : [
            "",
            "2.0151876656899663",
            "1.8550336677202108",
            "1.2724583109198613",
            "1.1936477331943696",
            "0.7582797875031551",
            "0.7209813423794547",
            "0.5807178246341778",
            "-0.10633132859485794",
            "0.3441828976148269",
            "0.6899999999999897",
            "-0.9926950354609865",
            "-3.056569343065691",
            "0.29290881628111176",
            "-0.36590297718000375",
            "0.055501606569090534",
            "1.6375322430527763",
            "2.59119691592217",
            "4.0488532675709",
            "5.003806497898947"
         ]
      },
      "y" : {
         "data" : [
            [
               596.7,
               637.7,
               691.1,
               756,
               799.6,
               873.4,
               944,
               992.7,
               1077.6,
               1185.9,
               1326.4,
               1434.2,
               1549.2,
               1718,
               1918.3,
               2163.9,
               2417.8,
               2631.7,
               2954.1,
               3073
            ],
            [
               90.9,
               97.4,
               113.5,
               125.7,
               122.8,
               133.3,
               149.3,
               144.2,
               166.4,
               195,
               229.8,
               228.7,
               206.1,
               257.9,
               324.1,
               386.6,
               423,
               401.9,
               474.9,
               414.5
            ],
            [
               0.7167,
               0.7277,
               0.7436,
               0.7676,
               0.7906,
               0.8254,
               0.8679,
               0.9145,
               0.9601,
               1,
               1.0575,
               1.1508,
               1.2579,
               1.3234,
               1.4005,
               1.5042,
               1.6342,
               1.7842,
               1.9514,
               2.0688
            ],
            [
               3.23,
               3.55,
               4.04,
               4.5,
               4.19,
               5.16,
               5.87,
               5.95,
               4.88,
               4.5,
               6.44,
               7.83,
               6.25,
               5.5,
               5.46,
               7.46,
               10.28,
               11.77,
               13.42,
               11.02
            ],
            [
               832.565927166178,
               876.322660436993,
               929.397525551372,
               984.887962480459,
               1011.38375917025,
               1058.15362248607,
               1087.68291277797,
               1085.51120831055,
               1122.3830850953,
               1185.9,
               1254.27895981087,
               1246.26346889121,
               1231.57643691867,
               1298.17137675684,
               1369.72509817922,
               1438.57199840447,
               1479.50067311223,
               1475.00280237642,
               1513.83622014964,
               1485.40216550657
            ],
            [
               126.83131017162,
               133.84636526041,
               152.635825712749,
               163.757165190203,
               155.325069567417,
               161.497455779016,
               172.024426777279,
               157.681793329688,
               173.315279658369,
               195,
               217.304964539007,
               198.731317344456,
               163.844502742666,
               194.87683240139,
               231.417350946091,
               257.013694987369,
               258.842246970995,
               225.255016253783,
               243.363738854156,
               200.357695282289
            ]
         ],
         "smps" : [
            "Smp1",
            "Smp2",
            "Smp3",
            "Smp4",
            "Smp5",
            "Smp6",
            "Smp7",
            "Smp8",
            "Smp9",
            "Smp10",
            "Smp11",
            "Smp12",
            "Smp13",
            "Smp14",
            "Smp15",
            "Smp16",
            "Smp17",
            "Smp18",
            "Smp19",
            "Smp20"
         ],
         "vars" : [
            "GNP",
            "Investment",
            "Price",
            "Interest",
            "RealGNP",
            "RealInv"
         ]
      }
   },
   "info" : "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n<script type=\"text/javascript\">\nconst macros = { \"\\\\R\": \"\\\\textsf{R}\", \"\\\\code\": \"\\\\texttt\"};\nfunction processMathHTML() {\n    var l = document.getElementsByClassName('reqn');\n    for (let e of l) { katex.render(e.textContent, e, { throwOnError: false, macros }); }\n    return;\n}</script>\n<script defer src=\"https://cdn.jsdelivr.net/npm/katex@0.15.3/dist/katex.min.js\"\n    onload=\"processMathHTML();\"></script>\n<table style=\"width: 100%;\"><tr><td>Investment</td><td style=\"text-align: right;\">R Documentation</td></tr></table>\n<h2>US Investment Data</h2>\n<h3>Description</h3>\n<p>US data for fitting an investment equation.\n</p>\n<h3>Usage</h3>\n<pre><code class='language-R'>data(Investment)</code></pre>\n<h3>Format</h3>\n<p>An annual time series from 1963 to 1982 with 7 variables.\n</p>\n<dl>\n<dt>GNP</dt><dd><p>nominal gross national product (in billion USD),</p>\n</dd>\n<dt>Investment</dt><dd><p>nominal gross private domestic investment (in billion USD),</p>\n</dd>\n<dt>Price</dt><dd><p>price index, implicit price deflator for GNP,</p>\n</dd>\n<dt>Interest</dt><dd><p>interest rate, average yearly discount rate\ncharged by the New York Federal Reserve Bank,</p>\n</dd>\n<dt>RealGNP</dt><dd><p>real GNP (= GNP/Price),</p>\n</dd>\n<dt>RealInv</dt><dd><p>real investment (= Investment/Price),</p>\n</dd>\n<dt>RealInt</dt><dd><p>approximation to the real interest rate\n(= Interest - 100 * diff(Price)/Price).</p>\n</dd>\n</dl>\n<h3>Source</h3>\n<p>Table 15.1 in Greene (1993)</p>\n<h3>References</h3>\n<p>Greene W.H. (1993). <em>Econometric Analysis</em>, 2nd edition.\nMacmillan Publishing Company, New York.\n</p>\n<p>Executive Office of the President (1984). <em>Economic Report of the\nPresident</em>. US Government Printing Office, Washington, DC.\n</p>\n<h3>Examples</h3>\n<pre><code class='language-R'>## Willam H. Greene, Econometric Analysis, 2nd Ed.\n## Chapter 15\n## load data set, p. 411, Table 15.1\ndata(Investment)\n## fit linear model, p. 412, Table 15.2\nfm &lt;- lm(RealInv ~ RealGNP + RealInt, data = Investment)\nsummary(fm)\n## visualize residuals, p. 412, Figure 15.1\nplot(ts(residuals(fm), start = 1964),\n  type = \"b\", pch = 19, ylim = c(-35, 35), ylab = \"Residuals\")\nsigma &lt;- sqrt(sum(residuals(fm)^2)/fm$df.residual) ## maybe used df = 26 instead of 16 ??\nabline(h = c(-2, 0, 2) * sigma, lty = 2)\nif(require(lmtest)) {\n## Newey-West covariances, Example 15.3\ncoeftest(fm, vcov = NeweyWest(fm, lag = 4))\n## Note, that the following is equivalent:\ncoeftest(fm, vcov = kernHAC(fm, kernel = \"Bartlett\", bw = 5, prewhite = FALSE, adjust = FALSE))\n## Durbin-Watson test, p. 424, Example 15.4\ndwtest(fm)\n## Breusch-Godfrey test, p. 427, Example 15.6\nbgtest(fm, order = 4)\n## visualize fitted series\nplot(Investment[, \"RealInv\"], type = \"b\", pch = 19, ylab = \"Real investment\")\nlines(ts(fitted(fm), start = 1964), col = 4)\n## 3-d visualization of fitted model\nif(require(scatterplot3d)) {\ns3d &lt;- scatterplot3d(Investment[,c(5,7,6)],\n  type = \"b\", angle = 65, scale.y = 1, pch = 16)\ns3d$plane3d(fm, lty.box = \"solid\", col = 4)\n</code></pre>\n</main>\n</div>\n",
   "config" : {
      "smpOverlays" : [
         "RealInt"
      ],
      "graphType" : "Heatmap",
      "title" : "US Investment Data",
      "subtitle" : "sandwich - Investment"
   }
}
