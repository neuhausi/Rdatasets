{
   "config" : {
      "smpOverlays" : [
         "sex",
         "hssoc"
      ],
      "title" : "Grades in a Sociology Course",
      "graphType" : "Heatmap",
      "subtitle" : "heplots - SocGrades"
   },
   "data" : {
      "x" : {
         "sex" : [
            "M",
            "M",
            "M",
            "M",
            "M",
            "M",
            "F",
            "M",
            "M",
            "F",
            "F",
            "F",
            "M",
            "M",
            "M",
            "F",
            "F",
            "F",
            "M",
            "F",
            "M",
            "M",
            "M",
            "F",
            "F",
            "F",
            "M",
            "M",
            "M",
            "M",
            "F",
            "M",
            "M",
            "M",
            "M",
            "M",
            "M",
            "M",
            "M",
            "F"
         ],
         "hssoc" : [
            "no",
            "no",
            "no",
            "no",
            "no",
            "no",
            "no",
            "no",
            "yes",
            "yes",
            "yes",
            "yes",
            "no",
            "yes",
            "yes",
            "no",
            "yes",
            "no",
            "yes",
            "no",
            "yes",
            "no",
            "no",
            "no",
            "yes",
            "no",
            "no",
            "yes",
            "yes",
            "no",
            "no",
            "yes",
            "yes",
            "yes",
            "yes",
            "no",
            "no",
            "no",
            "no",
            "no"
         ]
      },
      "y" : {
         "smps" : [
            "Smp1",
            "Smp2",
            "Smp3",
            "Smp4",
            "Smp5",
            "Smp6",
            "Smp7",
            "Smp8",
            "Smp9",
            "Smp10",
            "Smp11",
            "Smp12",
            "Smp13",
            "Smp14",
            "Smp15",
            "Smp16",
            "Smp17",
            "Smp18",
            "Smp19",
            "Smp20",
            "Smp21",
            "Smp22",
            "Smp23",
            "Smp24",
            "Smp25",
            "Smp26",
            "Smp27",
            "Smp28",
            "Smp29",
            "Smp30",
            "Smp31",
            "Smp32",
            "Smp33",
            "Smp34",
            "Smp35",
            "Smp36",
            "Smp37",
            "Smp38",
            "Smp39",
            "Smp40"
         ],
         "vars" : [
            "class",
            "gpa",
            "boards",
            "pretest",
            "midterm1",
            "midterm2",
            "final",
            "eval"
         ],
         "data" : [
            [
               2,
               2,
               2,
               3,
               2,
               3,
               1,
               2,
               3,
               2,
               2,
               3,
               1,
               2,
               2,
               2,
               2,
               3,
               2,
               2,
               2,
               1,
               2,
               2,
               2,
               1,
               2,
               1,
               2,
               3,
               2,
               2,
               1,
               1,
               2,
               3,
               1,
               2,
               3,
               1
            ],
            [
               3.55,
               2.7,
               3.5,
               2.91,
               3.1,
               3.49,
               3.17,
               3.57,
               3.76,
               3.81,
               3.6,
               3.1,
               3.08,
               3.5,
               3.43,
               3.39,
               3.76,
               3.71,
               3,
               3.47,
               3.69,
               3.24,
               3.46,
               3.39,
               3.9,
               2.76,
               2.7,
               3.77,
               4,
               3.4,
               3.09,
               3.8,
               3.28,
               3.7,
               3.42,
               3.09,
               3.7,
               2.69,
               3.4,
               2.95
            ],
            [
               410,
               390,
               510,
               430,
               600,
               610,
               610,
               560,
               700,
               460,
               590,
               500,
               410,
               470,
               210,
               610,
               510,
               600,
               470,
               460,
               800,
               610,
               490,
               470,
               610,
               580,
               410,
               630,
               790,
               490,
               400,
               610,
               610,
               500,
               430,
               540,
               610,
               400,
               390,
               490
            ],
            [
               17,
               20,
               22,
               13,
               16,
               28,
               14,
               10,
               28,
               30,
               28,
               15,
               24,
               15,
               26,
               16,
               25,
               3,
               5,
               16,
               28,
               13,
               9,
               13,
               30,
               10,
               13,
               8,
               29,
               17,
               15,
               16,
               13,
               30,
               17,
               17,
               25,
               10,
               23,
               18
            ],
            [
               43,
               50,
               47,
               24,
               47,
               57,
               42,
               42,
               69,
               48,
               59,
               21,
               52,
               35,
               35,
               59,
               68,
               38,
               45,
               37,
               54,
               45,
               31,
               39,
               67,
               30,
               19,
               71,
               80,
               47,
               46,
               59,
               48,
               68,
               43,
               31,
               64,
               19,
               43,
               20
            ],
            [
               61,
               47,
               79,
               40,
               60,
               59,
               61,
               79,
               83,
               67,
               74,
               40,
               71,
               40,
               57,
               58,
               66,
               58,
               24,
               48,
               100,
               83,
               70,
               48,
               85,
               14,
               55,
               100,
               94,
               45,
               58,
               90,
               84,
               81,
               49,
               54,
               87,
               36,
               51,
               59
            ],
            [
               129,
               60,
               119,
               100,
               79,
               99,
               92,
               107,
               156,
               110,
               116,
               49,
               107,
               125,
               64,
               100,
               138,
               63,
               82,
               73,
               132,
               87,
               89,
               99,
               119,
               100,
               84,
               166,
               111,
               110,
               93,
               141,
               99,
               114,
               96,
               39,
               149,
               53,
               39,
               91
            ],
            [
               3,
               1,
               1,
               1,
               2,
               1,
               3,
               2,
               1,
               1,
               1,
               1,
               5,
               1,
               5,
               1,
               2,
               1,
               3,
               3,
               2,
               2,
               2,
               1,
               2,
               1,
               2,
               3,
               2,
               1,
               1,
               2,
               2,
               5,
               1,
               1,
               4,
               3,
               1,
               1
            ]
         ]
      }
   },
   "info" : "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n<script type=\"text/javascript\">\nconst macros = { \"\\\\R\": \"\\\\textsf{R}\", \"\\\\code\": \"\\\\texttt\"};\nfunction processMathHTML() {\n    var l = document.getElementsByClassName('reqn');\n    for (let e of l) { katex.render(e.textContent, e, { throwOnError: false, macros }); }\n    return;\n}</script>\n<script defer src=\"https://cdn.jsdelivr.net/npm/katex@0.15.3/dist/katex.min.js\"\n    onload=\"processMathHTML();\"></script>\n<table style=\"width: 100%;\"><tr><td>SocGrades</td><td style=\"text-align: right;\">R Documentation</td></tr></table>\n<h2>Grades in a Sociology Course</h2>\n<h3>Description</h3>\n<p>The data set <code>SocGrades</code> contains four outcome measures on student\nperformance in an introductory sociology course together with six potential\npredictors. These data were used by Marascuilo and Levin (1983) for an\nexample of canonical correlation analysis, but are also suitable as examples\nof multivariate multiple regression, MANOVA, MANCOVA and step-down analysis\nin multivariate linear models.\n</p>\n<h3>Format</h3>\n<p>A data frame with 40 observations on the following 10 variables.\n</p>\n<dl>\n<dt><code>class</code></dt><dd><p>Social class, an ordered factor with levels\n<code>1</code> &gt; <code>2</code> &gt; <code>3</code></p>\n</dd> \n<dt><code>sex</code></dt><dd><p>sex, a factor with levels <code>F</code> <code>M</code></p>\n</dd> \n<dt><code>gpa</code></dt><dd><p>grade point average</p>\n</dd>\n<dt><code>boards</code></dt><dd><p>College Board test scores</p>\n</dd>\n<dt><code>hssoc</code></dt><dd><p>previous high school unit in sociology, a factor with 2 <code>no</code>, <code>yes</code></p>\n</dd> \n<dt><code>pretest</code></dt><dd><p>score on course pretest</p>\n</dd>\n<dt><code>midterm1</code></dt><dd><p>score on first midterm exam</p>\n</dd>\n<dt><code>midterm2</code></dt><dd><p>score on second midterm exam</p>\n</dd>\n<dt><code>final</code></dt><dd><p>score on final exam</p>\n</dd> \n<dt><code>eval</code></dt><dd><p>course evaluation</p>\n</dd> </dl>\n<h3>Details</h3>\n<p><code>midterm1</code>, <code>midterm2</code>, <code>final</code>, and possibly <code>eval</code> are\nthe response variables. All other variables are potential predictors.\n</p>\n<p>The factors <code>class</code>, <code>sex</code>, and <code>hssoc</code> can be used with\n<code>as.numeric</code> in correlational analyses.\n</p>\n<h3>Source</h3>\n<p>Marascuilo, L. A. and Levin, J. R. (1983). <em>Multivariate\nStatistics in the Social Sciences</em> Monterey, CA: Brooks/Cole, Table 5-1, p.\n192.\n</p>\n<h3>Examples</h3>\n<pre><code class='language-R'>\ndata(SocGrades)\n# basic MLM\ngrades.mod &lt;- lm(cbind(midterm1, midterm2, final, eval) ~ \n\tclass + sex + gpa + boards + hssoc + pretest, data=SocGrades)\ncar::Anova(grades.mod, test=\"Roy\")\nclr &lt;- c(\"red\", \"blue\", \"darkgreen\", \"magenta\", \"brown\", \"black\", \"darkgray\")\nheplot(grades.mod, col=clr)\npairs(grades.mod, col=clr)\n## Not run: \nheplot3d(grades.mod, col=clr, wire=FALSE)\n## End(Not run)\nif (require(candisc)) {\n\t# calculate canonical results for all terms\n\tgrades.can &lt;- candiscList(grades.mod)\n\t# extract canonical R^2s\n\tunlist(lapply(grades.can, function(x) x$canrsq))\n\t# plot class effect in canonical space\n\theplot(grades.can, term=\"class\", scale=4)\t\n\t# 1 df terms: show canonical scores and weights for responses\n\tplot(grades.can, term=\"sex\")\n\tplot(grades.can, term=\"gpa\")\n\tplot(grades.can, term=\"boards\")\n</code></pre>\n</main>\n</div>\n"
}
