{
   "data" : {
      "x" : {
         "sex" : [
            "m",
            "m",
            "m",
            "m",
            "m",
            "m",
            "m",
            "f",
            "m",
            "f",
            "f",
            "m",
            "f",
            "m",
            "m",
            "m",
            "m",
            "m",
            "m",
            "m",
            "m",
            "m",
            "m",
            "m",
            "f",
            "f",
            "f",
            "f",
            "m",
            "m",
            "m",
            "m"
         ]
      },
      "y" : {
         "smps" : [
            "Smp1",
            "Smp2",
            "Smp3",
            "Smp4",
            "Smp5",
            "Smp6",
            "Smp7",
            "Smp8",
            "Smp9",
            "Smp10",
            "Smp11",
            "Smp12",
            "Smp13",
            "Smp14",
            "Smp15",
            "Smp16",
            "Smp17",
            "Smp18",
            "Smp19",
            "Smp20",
            "Smp21",
            "Smp22",
            "Smp23",
            "Smp24",
            "Smp25",
            "Smp26",
            "Smp27",
            "Smp28",
            "Smp29",
            "Smp30",
            "Smp31",
            "Smp32"
         ],
         "data" : [
            [
               78,
               60,
               68,
               62,
               76,
               76,
               64,
               74,
               68,
               79,
               80,
               48,
               35,
               58,
               40,
               19,
               79,
               51,
               57,
               51,
               48,
               48,
               66,
               71,
               75,
               2,
               65,
               42,
               54,
               43,
               4,
               52
            ],
            [
               2,
               2,
               2,
               3,
               3,
               1,
               1,
               2,
               3,
               2,
               3,
               1,
               1,
               1,
               1,
               1,
               3,
               1,
               2,
               3,
               1,
               1,
               1,
               2,
               3,
               1,
               2,
               2,
               2,
               1,
               2,
               1
            ],
            [
               3,
               3,
               3,
               5,
               4,
               3,
               2,
               3,
               4,
               2,
               4,
               3,
               4,
               3,
               4,
               3,
               2,
               3,
               3,
               3,
               3,
               3,
               3,
               3,
               1,
               3,
               3,
               3,
               2,
               2,
               2,
               3
            ],
            [
               1,
               2,
               1,
               3,
               3,
               1,
               1,
               2,
               2,
               1,
               4,
               1,
               1,
               1,
               1,
               1,
               3,
               1,
               2,
               3,
               1,
               1,
               1,
               2,
               3,
               1,
               1,
               1,
               2,
               1,
               2,
               1
            ],
            [
               1,
               2,
               1,
               1,
               2,
               1,
               2,
               2,
               1,
               1,
               1,
               1,
               2,
               2,
               1,
               1,
               3,
               1,
               1,
               2,
               1,
               1,
               1,
               2,
               1,
               1,
               1,
               1,
               2,
               1,
               1,
               1
            ],
            [
               2,
               2,
               1,
               1,
               2,
               1,
               1,
               1,
               1,
               2,
               1,
               1,
               1,
               1,
               1,
               1,
               3,
               1,
               1,
               1,
               1,
               1,
               1,
               2,
               2,
               1,
               2,
               2,
               2,
               1,
               1,
               1
            ],
            [
               9,
               4,
               7,
               35,
               9,
               7,
               5,
               16,
               7,
               11,
               4,
               9,
               2,
               4,
               3,
               4,
               3,
               5,
               8,
               8,
               3,
               5,
               8,
               2,
               7,
               0,
               16,
               3,
               2,
               3,
               3,
               8
            ],
            [
               3,
               5,
               4,
               3,
               4,
               5,
               5,
               3,
               5,
               3,
               5,
               3,
               5,
               5,
               5,
               5,
               5,
               5,
               3,
               4,
               5,
               5,
               4,
               5,
               5,
               5,
               3,
               5,
               5,
               5,
               5,
               3
            ]
         ],
         "vars" : [
            "age",
            "pstat",
            "build",
            "cardiac",
            "resp",
            "leave",
            "los",
            "nurse"
         ]
      }
   },
   "info" : "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n<script type=\"text/javascript\">\nconst macros = { \"\\\\R\": \"\\\\textsf{R}\", \"\\\\code\": \"\\\\texttt\"};\nfunction processMathHTML() {\n    var l = document.getElementsByClassName('reqn');\n    for (let e of l) { katex.render(e.textContent, e, { throwOnError: false, macros }); }\n    return;\n}</script>\n<script defer src=\"https://cdn.jsdelivr.net/npm/katex@0.15.3/dist/katex.min.js\"\n    onload=\"processMathHTML();\"></script>\n<table style=\"width: 100%;\"><tr><td>Hernior</td><td style=\"text-align: right;\">R Documentation</td></tr></table>\n<h2>Recovery from Elective Herniorrhaphy</h2>\n<h3>Description</h3>\n<p>A data set on measures of post-operative recovery of 32 patients undergoing\nan elective herniorrhaphy operation, in relation to pre-operative measures.\n</p>\n<h3>Format</h3>\n<p>A data frame with 32 observations on the following 9 variables.\n</p>\n<dl>\n<dt><code>age</code></dt><dd><p>patient age</p>\n</dd> \n<dt><code>sex</code></dt><dd><p>patient sex, a factor with levels <code>f</code> <code>m</code></p>\n</dd> \n<dt><code>pstat</code></dt><dd><p>physical status (ignoring that associated with the operation). \nA 1-5 scale, with 1=perfect health, 5=very poor health.</p>\n</dd> \n<dt><code>build</code></dt><dd><p>body build, a 1-5 scale, with 1=emaciated, 2=thin, 3=average, 4=fat, 5=obese.</p>\n</dd>\n<dt><code>cardiac</code></dt><dd><p>preoperative complications with heart, 1-4 scale, with 1=none, 2=mild, 3=moderate, 4=severe.</p>\n</dd> \n<dt><code>resp</code></dt><dd><p>preoperative complications with respiration, 1-4 scale, with 1=none, 2=mild, \n3=moderate, 4=severe.</p>\n</dd> \n<dt><code>leave</code></dt><dd><p>condition upon leaving the recovery room, a 1-4 scale, with 1=routine recovery, 2=intensive care for observation\novernight, 3=intensive care, with moderate care required, 4=intensive care,\nwith moderate care required.  </p>\n</dd> \n<dt><code>los</code></dt><dd><p>length of stay in hospital after operation (days)</p>\n</dd>\n<dt><code>nurse</code></dt><dd><p>level of nursing required one week after operation, a\n1-5 scale, with 1=intense, 2=heavy, 3=moderate, 4=light, 5=none (?); see Details</p>\n</dd>\n</dl>\n<h3>Details</h3>\n<p><code>leave</code>, <code>nurse</code> and <code>los</code> are outcome measures; the\nremaining variables are potential predictors of recovery status.\n</p>\n<p>The variable <code>nurse</code> is recorded as 1-4, with remaining (20) entries\nentered as &quot;-&quot; in both sources.  It is not clear whether this means &quot;none&quot;\nor NA.  The former interpretation was used in constructing the R data frame,\nso <code>nurse==5</code> for these observations. Using\n<code>Hernior$nurse[Hernior$nurse==5] &lt;- NA</code> would change to the other\ninterpretation, but render <code>nurse</code> useless in a multivariate analysis.\n</p>\n<p>The ordinal predictors could instead be treated as factors, and there are\nalso potential interactions to be explored.\n</p>\n<h3>Source</h3>\n<p>Mosteller, F. and Tukey, J. W. (1977), <em>Data analysis and\nregression</em>, Reading, MA: Addison-Wesley. Data Exhibit 8, 567-568. Their\nsource: A study by B. McPeek and J. P. Gilbert of the Harvard Anesthesia\nCenter.\n</p>\n<h3>References</h3>\n<p>Hand, D. J., Daly, F., Lunn, A. D., McConway, K. J. and\nOstrowski, E. (1994), <em>A Handbook of Small Data Sets</em>, Number 484,\n390-391.\n</p>\n<h3>Examples</h3>\n<pre><code class='language-R'>\nlibrary(car)\ndata(Hernior)\nstr(Hernior)\nHern.mod &lt;- lm(cbind(leave, nurse, los) ~ \n               age + sex +  pstat +  build + cardiac + resp, data=Hernior)\ncar::Anova(Hern.mod, test=\"Roy\") # actually, all tests are identical\n# test overall regression\nprint(linearHypothesis(Hern.mod, c(\"age\", \"sexm\", \"pstat\", \"build\", \"cardiac\", \"resp\")), SSP=FALSE)\n# joint test of age, sex &amp; caridac\nprint(linearHypothesis(Hern.mod, c(\"age\", \"sexm\", \"cardiac\")), SSP=FALSE)\n# HE plots\nclr &lt;- c(\"red\", \"darkgray\", \"blue\", \"darkgreen\", \"magenta\", \"brown\", \"black\")\nheplot(Hern.mod, col=clr)\npairs(Hern.mod, col=clr)\n## Enhancing the pairs plot ...\n# create better variable labels\nvlab &lt;- c(\"LeaveCondition\\n(leave)\", \n          \"NursingCare\\n(nurse)\", \n          \"LengthOfStay\\n(los)\")\n# Add ellipse to test all 5 regressors simultaneously\nhyp &lt;- list(\"Regr\" = c(\"age\", \"sexm\", \"pstat\", \"build\", \"cardiac\", \"resp\"))\npairs(Hern.mod, hypotheses=hyp, col=clr, var.labels=vlab)\n## Views in canonical space for the various predictors\nif (require(candisc)) {\n\tHern.canL &lt;- candiscList(Hern.mod)\n\tplot(Hern.canL, term=\"age\")\n\tplot(Hern.canL, term=\"sex\")\n\tplot(Hern.canL, term=\"pstat\")  # physical status\n</code></pre>\n</main>\n</div>\n",
   "config" : {
      "subtitle" : "heplots - Hernior",
      "title" : "Recovery from Elective Herniorrhaphy",
      "graphType" : "Heatmap",
      "smpOverlays" : [
         "sex"
      ]
   }
}
