{
   "data" : {
      "y" : {
         "vars" : [
            "Hunt(R)",
            "Sandman(R)",
            "Howard(D)",
            "Thompson(D)",
            "Freylinghuysen(R)",
            "Forsythe(R)",
            "Widnall(R)",
            "Roe(D)",
            "Heltoski(D)",
            "Rodino(D)",
            "Minish(D)",
            "Rinaldo(R)",
            "Maraziti(R)",
            "Daniels(D)",
            "Patten(D)"
         ],
         "smps" : [
            "Hunt(R)",
            "Sandman(R)",
            "Howard(D)",
            "Thompson(D)",
            "Freylinghuysen(R)",
            "Forsythe(R)",
            "Widnall(R)",
            "Roe(D)",
            "Heltoski(D)",
            "Rodino(D)",
            "Minish(D)",
            "Rinaldo(R)",
            "Maraziti(R)",
            "Daniels(D)",
            "Patten(D)"
         ],
         "data" : [
            [
               0,
               8,
               15,
               15,
               10,
               9,
               7,
               15,
               16,
               14,
               15,
               16,
               7,
               11,
               13
            ],
            [
               8,
               0,
               17,
               12,
               13,
               13,
               12,
               16,
               17,
               15,
               16,
               17,
               13,
               12,
               16
            ],
            [
               15,
               17,
               0,
               9,
               16,
               12,
               15,
               5,
               5,
               6,
               5,
               4,
               11,
               10,
               7
            ],
            [
               15,
               12,
               9,
               0,
               14,
               12,
               13,
               10,
               8,
               8,
               8,
               6,
               15,
               10,
               7
            ],
            [
               10,
               13,
               16,
               14,
               0,
               8,
               9,
               13,
               14,
               12,
               12,
               12,
               10,
               11,
               11
            ],
            [
               9,
               13,
               12,
               12,
               8,
               0,
               7,
               12,
               11,
               10,
               9,
               10,
               6,
               6,
               10
            ],
            [
               7,
               12,
               15,
               13,
               9,
               7,
               0,
               17,
               16,
               15,
               14,
               15,
               10,
               11,
               13
            ],
            [
               15,
               16,
               5,
               10,
               13,
               12,
               17,
               0,
               4,
               5,
               5,
               3,
               12,
               7,
               6
            ],
            [
               16,
               17,
               5,
               8,
               14,
               11,
               16,
               4,
               0,
               3,
               2,
               1,
               13,
               7,
               5
            ],
            [
               14,
               15,
               6,
               8,
               12,
               10,
               15,
               5,
               3,
               0,
               1,
               2,
               11,
               4,
               6
            ],
            [
               15,
               16,
               5,
               8,
               12,
               9,
               14,
               5,
               2,
               1,
               0,
               1,
               12,
               5,
               5
            ],
            [
               16,
               17,
               4,
               6,
               12,
               10,
               15,
               3,
               1,
               2,
               1,
               0,
               12,
               6,
               4
            ],
            [
               7,
               13,
               11,
               15,
               10,
               6,
               10,
               12,
               13,
               11,
               12,
               12,
               0,
               9,
               13
            ],
            [
               11,
               12,
               10,
               10,
               11,
               6,
               11,
               7,
               7,
               4,
               5,
               6,
               9,
               0,
               9
            ],
            [
               13,
               16,
               7,
               7,
               11,
               10,
               13,
               6,
               5,
               6,
               5,
               4,
               13,
               9,
               0
            ]
         ]
      }
   },
   "info" : "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n<script type=\"text/javascript\">\nconst macros = { \"\\\\R\": \"\\\\textsf{R}\", \"\\\\code\": \"\\\\texttt\"};\nfunction processMathHTML() {\n    var l = document.getElementsByClassName('reqn');\n    for (let e of l) { katex.render(e.textContent, e, { throwOnError: false, macros }); }\n    return;\n}</script>\n<script defer src=\"https://cdn.jsdelivr.net/npm/katex@0.15.3/dist/katex.min.js\"\n    onload=\"processMathHTML();\"></script>\n<table style=\"width: 100%;\"><tr><td>voting</td><td style=\"text-align: right;\">R Documentation</td></tr></table>\n<h2> House of Representatives Voting Data </h2>\n<h3>Description</h3>\n<p>Voting results for 15 congressmen from New Jersey.\n</p>\n<h3>Usage</h3>\n<pre><code class='language-R'>data(\"voting\")</code></pre>\n<h3>Format</h3>\n<p>A 15 times 15 matrix.\n</p>\n<h3>Details</h3>\n<p>Romesburg (1984) gives a set of data that shows the number\nof times 15 congressmen from New Jersey voted differently in \nthe House of Representatives on 19 environmental bills. Abstentions\nare not recorded.\n</p>\n<h3>Source</h3>\n<p>H. C. Romesburg (1984), <em>Cluster Analysis for Researchers</em>.\nLifetime Learning Publications, Belmont, Canada.\n</p>\n<h3>Examples</h3>\n<pre><code class='language-R'>\n  data(\"voting\", package = \"HSAUR\")\n  require(\"MASS\")\n  voting_mds &lt;- isoMDS(voting)\n  plot(voting_mds$points[,1], voting_mds$points[,2],\n       type = \"n\", xlab = \"Coordinate 1\", ylab = \"Coordinate 2\",\n       xlim = range(voting_mds$points[,1])*1.2)\n  text(voting_mds$points[,1], voting_mds$points[,2], \n       labels = colnames(voting))\n  voting_sh &lt;- Shepard(voting[lower.tri(voting)], voting_mds$points)\n</code></pre>\n</main>\n</div>\n",
   "config" : {
      "graphType" : "Heatmap",
      "subtitle" : "HSAUR - voting",
      "title" : "House of Representatives Voting Data",
      "smpOverlays" : [
         null
      ]
   }
}
