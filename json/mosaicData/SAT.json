{
   "data" : {
      "x" : {
         "state" : [
            "Alabama",
            "Alaska",
            "Arizona",
            "Arkansas",
            "California",
            "Colorado",
            "Connecticut",
            "Delaware",
            "Florida",
            "Georgia",
            "Hawaii",
            "Idaho",
            "Illinois",
            "Indiana",
            "Iowa",
            "Kansas",
            "Kentucky",
            "Louisiana",
            "Maine",
            "Maryland",
            "Massachusetts",
            "Michigan",
            "Minnesota",
            "Mississippi",
            "Missouri",
            "Montana",
            "Nebraska",
            "Nevada",
            "New Hampshire",
            "New Jersey",
            "New Mexico",
            "New York",
            "North Carolina",
            "North Dakota",
            "Ohio",
            "Oklahoma",
            "Oregon",
            "Pennsylvania",
            "Rhode Island",
            "South Carolina",
            "South Dakota",
            "Tennessee",
            "Texas",
            "Utah",
            "Vermont",
            "Virginia",
            "Washington",
            "West Virginia",
            "Wisconsin",
            "Wyoming"
         ]
      },
      "y" : {
         "vars" : [
            "expend",
            "ratio",
            "salary",
            "frac",
            "verbal",
            "math",
            "sat"
         ],
         "smps" : [
            "Smp1",
            "Smp2",
            "Smp3",
            "Smp4",
            "Smp5",
            "Smp6",
            "Smp7",
            "Smp8",
            "Smp9",
            "Smp10",
            "Smp11",
            "Smp12",
            "Smp13",
            "Smp14",
            "Smp15",
            "Smp16",
            "Smp17",
            "Smp18",
            "Smp19",
            "Smp20",
            "Smp21",
            "Smp22",
            "Smp23",
            "Smp24",
            "Smp25",
            "Smp26",
            "Smp27",
            "Smp28",
            "Smp29",
            "Smp30",
            "Smp31",
            "Smp32",
            "Smp33",
            "Smp34",
            "Smp35",
            "Smp36",
            "Smp37",
            "Smp38",
            "Smp39",
            "Smp40",
            "Smp41",
            "Smp42",
            "Smp43",
            "Smp44",
            "Smp45",
            "Smp46",
            "Smp47",
            "Smp48",
            "Smp49",
            "Smp50"
         ],
         "data" : [
            [
               4.405,
               8.963,
               4.778,
               4.459,
               4.992,
               5.443,
               8.817,
               7.03,
               5.718,
               5.193,
               6.078,
               4.21,
               6.136,
               5.826,
               5.483,
               5.817,
               5.217,
               4.761,
               6.428,
               7.245,
               7.287,
               6.994,
               6,
               4.08,
               5.383,
               5.692,
               5.935,
               5.16,
               5.859,
               9.774,
               4.586,
               9.623,
               5.077,
               4.775,
               6.162,
               4.845,
               6.436,
               7.109,
               7.469,
               4.797,
               4.775,
               4.388,
               5.222,
               3.656,
               6.75,
               5.327,
               5.906,
               6.107,
               6.93,
               6.16
            ],
            [
               17.2,
               17.6,
               19.3,
               17.1,
               24,
               18.4,
               14.4,
               16.6,
               19.1,
               16.3,
               17.9,
               19.1,
               17.3,
               17.5,
               15.8,
               15.1,
               17,
               16.8,
               13.8,
               17,
               14.8,
               20.1,
               17.5,
               17.5,
               15.5,
               16.3,
               14.5,
               18.7,
               15.6,
               13.8,
               17.2,
               15.2,
               16.2,
               15.3,
               16.6,
               15.5,
               19.9,
               17.1,
               14.7,
               16.4,
               14.4,
               18.6,
               15.7,
               24.3,
               13.8,
               14.6,
               20.2,
               14.8,
               15.9,
               14.9
            ],
            [
               31.144,
               47.951,
               32.175,
               28.934,
               41.078,
               34.571,
               50.045,
               39.076,
               32.588,
               32.291,
               38.518,
               29.783,
               39.431,
               36.785,
               31.511,
               34.652,
               32.257,
               26.461,
               31.972,
               40.661,
               40.795,
               41.895,
               35.948,
               26.818,
               31.189,
               28.785,
               30.922,
               34.836,
               34.72,
               46.087,
               28.493,
               47.612,
               30.793,
               26.327,
               36.802,
               28.172,
               38.555,
               44.51,
               40.729,
               30.279,
               25.994,
               32.477,
               31.223,
               29.082,
               35.406,
               33.987,
               36.151,
               31.944,
               37.746,
               31.285
            ],
            [
               8,
               47,
               27,
               6,
               45,
               29,
               81,
               68,
               48,
               65,
               57,
               15,
               13,
               58,
               5,
               9,
               11,
               9,
               68,
               64,
               80,
               11,
               9,
               4,
               9,
               21,
               9,
               30,
               70,
               70,
               11,
               74,
               60,
               5,
               23,
               9,
               51,
               70,
               70,
               58,
               5,
               12,
               47,
               4,
               68,
               65,
               48,
               17,
               9,
               10
            ],
            [
               491,
               445,
               448,
               482,
               417,
               462,
               431,
               429,
               420,
               406,
               407,
               468,
               488,
               415,
               516,
               503,
               477,
               486,
               427,
               430,
               430,
               484,
               506,
               496,
               495,
               473,
               494,
               434,
               444,
               420,
               485,
               419,
               411,
               515,
               460,
               491,
               448,
               419,
               425,
               401,
               505,
               497,
               419,
               513,
               429,
               428,
               443,
               448,
               501,
               476
            ],
            [
               538,
               489,
               496,
               523,
               485,
               518,
               477,
               468,
               469,
               448,
               482,
               511,
               560,
               467,
               583,
               557,
               522,
               535,
               469,
               479,
               477,
               549,
               579,
               540,
               550,
               536,
               556,
               483,
               491,
               478,
               530,
               473,
               454,
               592,
               515,
               536,
               499,
               461,
               463,
               443,
               563,
               543,
               474,
               563,
               472,
               468,
               494,
               484,
               572,
               525
            ],
            [
               1029,
               934,
               944,
               1005,
               902,
               980,
               908,
               897,
               889,
               854,
               889,
               979,
               1048,
               882,
               1099,
               1060,
               999,
               1021,
               896,
               909,
               907,
               1033,
               1085,
               1036,
               1045,
               1009,
               1050,
               917,
               935,
               898,
               1015,
               892,
               865,
               1107,
               975,
               1027,
               947,
               880,
               888,
               844,
               1068,
               1040,
               893,
               1076,
               901,
               896,
               937,
               932,
               1073,
               1001
            ]
         ]
      }
   },
   "info" : "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n<script type=\"text/javascript\">\nconst macros = { \"\\\\R\": \"\\\\textsf{R}\", \"\\\\code\": \"\\\\texttt\"};\nfunction processMathHTML() {\n    var l = document.getElementsByClassName('reqn');\n    for (let e of l) { katex.render(e.textContent, e, { throwOnError: false, macros }); }\n    return;\n}</script>\n<script defer src=\"https://cdn.jsdelivr.net/npm/katex@0.15.3/dist/katex.min.js\"\n    onload=\"processMathHTML();\"></script>\n<table style=\"width: 100%;\"><tr><td>SAT</td><td style=\"text-align: right;\">R Documentation</td></tr></table>\n<h2>State by State SAT data</h2>\n<h3>Description</h3>\n<p>SAT data assembled for a statistics education journal article on the\nlink between SAT scores and measures of educational expenditures\n</p>\n<h3>Usage</h3>\n<pre><code class='language-R'>data(SAT)\n</code></pre>\n<h3>Format</h3>\n<p>A data frame with 50 observations on the following variables.\n</p>\n<dl>\n<dt><code>state</code></dt><dd><p>a factor with names of each state</p>\n</dd>\n<dt><code>expend</code></dt><dd><p>expenditure per pupil in average daily attendance in\npublic elementary and secondary schools, 1994-95 (in thousands of US dollars)</p>\n</dd>\n<dt><code>ratio</code></dt><dd><p>average pupil/teacher ratio in public elementary and secondary\nschools, Fall 1994</p>\n</dd>\n<dt><code>salary</code></dt><dd><p>estimated average annual salary of teachers in public elementary\nand secondary schools, 1994-95 (in thousands of US dollars)</p>\n</dd>\n<dt><code>frac</code></dt><dd><p>percentage of all eligible students taking the SAT, 1994-95</p>\n</dd>\n<dt><code>verbal</code></dt><dd><p>average verbal SAT score, 1994-95</p>\n</dd>\n<dt><code>math</code></dt><dd><p>average math SAT score, 1994-95</p>\n</dd>\n<dt><code>sat</code></dt><dd><p>average total SAT score, 1994-95</p>\n</dd>\n</dl>\n<h3>Source</h3>\n<p>http://www.amstat.org/publications/jse/secure/v7n2/datasets.guber.cfm\n</p>\n<h3>References</h3>\n<p>Deborah Lynn Guber, &quot;Getting what you pay for: the debate over equity in\npublic school expenditures&quot; (1999), <em>Journal of Statistics Education</em> 7(2).\n</p>\n<h3>Examples</h3>\n<pre><code class='language-R'>data(SAT)\nif (require(ggformula)) {\n  gf_point(sat ~ expend, data = SAT, color = \"blue\", alpha = 0.5) |&gt;\n    gf_lm()\n  gf_text(sat ~ expend, data = SAT, label = ~ abbreviate(SAT$state, 3),\n    inherit = FALSE)\n</code></pre>\n</main>\n</div>\n",
   "config" : {
      "title" : "State by State SAT data",
      "smpOverlays" : [
         "state"
      ],
      "graphType" : "Heatmap",
      "subtitle" : "mosaicData - SAT"
   }
}
