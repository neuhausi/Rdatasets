{
   "data" : {
      "y" : {
         "data" : [
            [
               0,
               1,
               0,
               0,
               0,
               0,
               0,
               0,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               0
            ],
            [
               1,
               0,
               1,
               0,
               1,
               1,
               0,
               0,
               1,
               1,
               1,
               1,
               1,
               1,
               0,
               0,
               0,
               0
            ],
            [
               1,
               0,
               0,
               1,
               0,
               0,
               0,
               1,
               0,
               0,
               1,
               1,
               0,
               1,
               0,
               0,
               0,
               1
            ],
            [
               4,
               2,
               3,
               4,
               5,
               4,
               4,
               2,
               3,
               5,
               5,
               1,
               1,
               4,
               3,
               4,
               2,
               2
            ],
            [
               3,
               1,
               3,
               2,
               2,
               3,
               3,
               2,
               1,
               2,
               3,
               2,
               2,
               2,
               2,
               2,
               2,
               1
            ],
            [
               15,
               3,
               1,
               16,
               2,
               12,
               13,
               7,
               4,
               14,
               8,
               9,
               6,
               11,
               10,
               18,
               17,
               5
            ],
            [
               25,
               150,
               150,
               125,
               20,
               50,
               40,
               100,
               25,
               100,
               45,
               90,
               20,
               80,
               40,
               200,
               150,
               25
            ],
            [
               15,
               50,
               50,
               50,
               15,
               40,
               20,
               15,
               15,
               60,
               10,
               25,
               10,
               30,
               20,
               60,
               60,
               10
            ]
         ],
         "smps" : [
            "Smp1",
            "Smp2",
            "Smp3",
            "Smp4",
            "Smp5",
            "Smp6",
            "Smp7",
            "Smp8",
            "Smp9",
            "Smp10",
            "Smp11",
            "Smp12",
            "Smp13",
            "Smp14",
            "Smp15",
            "Smp16",
            "Smp17",
            "Smp18"
         ],
         "vars" : [
            "V1",
            "V2",
            "V3",
            "V4",
            "V5",
            "V6",
            "V7",
            "V8"
         ]
      }
   },
   "info" : "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n<script type=\"text/javascript\">\nconst macros = { \"\\\\R\": \"\\\\textsf{R}\", \"\\\\code\": \"\\\\texttt\"};\nfunction processMathHTML() {\n    var l = document.getElementsByClassName('reqn');\n    for (let e of l) { katex.render(e.textContent, e, { throwOnError: false, macros }); }\n    return;\n}</script>\n<script defer src=\"https://cdn.jsdelivr.net/npm/katex@0.15.3/dist/katex.min.js\"\n    onload=\"processMathHTML();\"></script>\n<table style=\"width: 100%;\"><tr><td>flower</td><td style=\"text-align: right;\">R Documentation</td></tr></table>\n<h2>Flower Characteristics</h2>\n<h3>Description</h3>\n<p>8 characteristics for 18 popular flowers.</p>\n<h3>Usage</h3>\n<pre><code class='language-R'>data(flower)</code></pre>\n<h3>Format</h3>\n<p>A data frame with 18 observations on 8 variables:\n</p>\n<table>\n<tr>\n <td style=\"text-align: right;\">\n    [ , \"V1\"] </td><td style=\"text-align: left;\"> factor  </td><td style=\"text-align: left;\"> winters </td>\n</tr>\n<tr>\n <td style=\"text-align: right;\">\n    [ , \"V2\"] </td><td style=\"text-align: left;\"> factor  </td><td style=\"text-align: left;\"> shadow </td>\n</tr>\n<tr>\n <td style=\"text-align: right;\">\n    [ , \"V3\"] </td><td style=\"text-align: left;\"> factor  </td><td style=\"text-align: left;\"> tubers </td>\n</tr>\n<tr>\n <td style=\"text-align: right;\">\n    [ , \"V4\"] </td><td style=\"text-align: left;\"> factor  </td><td style=\"text-align: left;\"> color </td>\n</tr>\n<tr>\n <td style=\"text-align: right;\">\n    [ , \"V5\"] </td><td style=\"text-align: left;\"> ordered </td><td style=\"text-align: left;\"> soil </td>\n</tr>\n<tr>\n <td style=\"text-align: right;\">\n    [ , \"V6\"] </td><td style=\"text-align: left;\"> ordered </td><td style=\"text-align: left;\"> preference </td>\n</tr>\n<tr>\n <td style=\"text-align: right;\">\n    [ , \"V7\"] </td><td style=\"text-align: left;\"> numeric </td><td style=\"text-align: left;\"> height </td>\n</tr>\n<tr>\n <td style=\"text-align: right;\">\n    [ , \"V8\"] </td><td style=\"text-align: left;\"> numeric </td><td style=\"text-align: left;\"> distance\n  </td>\n</tr>\n</table>\n<dl>\n<dt>V1</dt><dd><p>winters, is binary and indicates whether the plant may be left\nin the garden when it freezes.</p>\n</dd>\n<dt>V2</dt><dd><p>shadow, is binary and shows whether the plant needs to stand\nin the shadow.</p>\n</dd>\n<dt>V3</dt><dd><p>tubers, is asymmetric binary and distinguishes between plants\nwith tubers and plants that grow in any other way.</p>\n</dd>\n<dt>V4</dt><dd><p>color, is nominal and specifies the flower's color (1 = white,\n2 = yellow, 3 = pink, 4 = red, 5 = blue).</p>\n</dd>\n<dt>V5</dt><dd><p>soil, is ordinal and indicates whether the plant grows in dry\n(1), normal (2), or wet (3) soil.</p>\n</dd>\n<dt>V6</dt><dd><p>preference, is ordinal and gives someone's preference ranking\ngoing from 1 to 18.</p>\n</dd>\n<dt>V7</dt><dd><p>height, is interval scaled, the plant's height in centimeters.</p>\n</dd>\n<dt>V8</dt><dd><p>distance, is interval scaled, the distance in centimeters that\nshould be left between the plants.</p>\n</dd>\n</dl>\n<h3>References</h3>\n<p>Struyf, Hubert and Rousseeuw (1996), see <code>agnes</code>.\n</p>\n<h3>Examples</h3>\n<pre><code class='language-R'>data(flower)\nstr(flower) # factors, ordered, numeric\n## \"Nicer\" version (less numeric more self explainable) of 'flower':\nflowerN &lt;- flower\ncolnames(flowerN) &lt;- c(\"winters\", \"shadow\", \"tubers\", \"color\",\n                       \"soil\", \"preference\", \"height\", \"distance\")\nfor(j in 1:3) flowerN[,j] &lt;- (flowerN[,j] == \"1\")\nlevels(flowerN$color) &lt;- c(\"1\" = \"white\", \"2\" = \"yellow\", \"3\" = \"pink\",\n                           \"4\" = \"red\", \"5\" = \"blue\")[levels(flowerN$color)]\nlevels(flowerN$soil)  &lt;- c(\"1\" = \"dry\", \"2\" = \"normal\", \"3\" = \"wet\")[levels(flowerN$soil)]\nflowerN\n## ==&gt; example(daisy)  on how it is used\n</code></pre>\n</main>\n</div>\n",
   "config" : {
      "title" : "Flower Characteristics",
      "subtitle" : "cluster - flower",
      "graphType" : "Heatmap"
   }
}
